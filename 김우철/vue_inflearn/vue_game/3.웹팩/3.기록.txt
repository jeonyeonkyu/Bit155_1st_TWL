npm init 입력후
패키지 네임만 입력해주고 나머지다 엔터
내가 쓰는 남의 소스코드가 정리되는 package.json이 생김

남의 소스코드의 버전을 기억하기 위해서 package.json을 사용
(보통 수백개의 남의코드 사용)
남의 소스크드를 패키지라 함

그 다음npm install vue로 설치

npm install webpack webpack-cli -D(--save-dev) : -D는 옵션(개발용으로 설치하겠다)


"main": "index.js" <-- 가장 중요한 파일

webpack.config.js 파일 수동 생성
(이게 어려움)
(웹팩에 대한 설명)

NumberBaseball.vue가 이전 강좌의 컴포넌트같은 역할
>>여기에 넣는 것은 다 JS라 생각하셈

main.js랑 NumberBaseball.vue를 합쳐서 app.js로 만들어줌

package.json 파일중 일부
 "scripts": {
    "build": "webpack" 
  },
>> npm run (스크립트 이름 / 여기서는 build)
>> 웹팩을 돌리는 명령어가 webpack라 webpack 적어줌

NumberBaseball.vue랑 main.js를 연결해줘야함(import로 연결)

웹팩 로딩 순서
웹팩은 entry를 보고 main.js로 간다
main.js의 import문을 다 부른다
하지만 NumberBaseball.vue를 JS로 인식하지 못함(문법이 달라서)
->그래서 rules로 해결해야함
(웹팩은 JS만 합쳐줌) 

 loader: 'vue-loader', : vue-loader 다운 필요

웹팩은 개발할때만 사용해서 뒤에 -D를 붙여야 됨

 rules: [{
            //파일명이 .vue로 끝나는 파일
            test: /\.vue$/, 
            loader: 'vue-loader',
        }],
    },
    이 룰에 의해
.vue파일은 vue-loader가 처리

노드환경(웹팩)에서는 require로 남의코드를 불러오고
vue환경에서는 import로 불러온다

npm i vue-template-complier -D 설치

필수
vue랑 vue-template-complier 버전은 일치해야 한다

버전 업그레이드 방법
ex) vue 버전업그레이드 예시
npm i vue@2.7.0

npm run build로 실행

app.js는 난독화가 되어있음()

하나바뀔떄마다 빌드를 다시 돌려줘야함

웹팩이 vue.js + NumberBaseball.vue + main.js를 합쳐줌

 <li v-for="t in tries" v-bind:key="t.id">
    <div>     {{t.try}}</div>
    <div></div>
</li>
>> v-for시 반드시 key 입력해줘야함


   <form v-on:submit="onSubmitForm">
   v-on -> @ 이로 바꿀 수 있음

   e.preventDefault()를 지우고
     <form @submit.prevent="onSubmitForm"> 
     이렇게 할 수 있음

화면에 보여지는 것은 데이터
화면에 보여지지 않는것은 변수로 사용

숫자야구 로직은 설명 생략

js에서 지원하지 않는 문법 or IE 사용시 babel을 사용

vue같은경우는 에러메시지를 아주 정확히 보여줌

  export default {
  }
이부분을 main.js에서 import로 가져올 수 있는것

자동빌드와 새로고침안하는 방법
>> 
