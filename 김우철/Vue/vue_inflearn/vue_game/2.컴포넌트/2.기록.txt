중복되는 코드는 컴포넌트로 만든다

PascalCase : WooCheol
camelCase : wooCheol -> <script>에서 사용 가능(리액트는 보통 이걸 사용)
kebab-case : woo-cheol -> html에서는 케밥케이스 사용

기억해둘것
: component를 할때는 data가 달라진다

template: ``, //백틱 사용(ES6)
-> 백틱을 쓰면 줄바꿈할 때 편함

-------------------------------

<body>
    <worldRelay/>
</body>

<script>
    Vue.component('worldRelay', {
        template: ` //백틱 사용(ES6)
        <div id="root">
            <div>{{word}}</div>
                <form v-on:submit="onSubmitForm">
                    <input type="text" ref="answer" v-model="value">
                    <button type="submit">입력</button>
                </form>
            <div id="result">{{result}}</div>
        </div>
        `,
        data: {

        },
        methods: {

        }
    })
</script>

------------------------------- : 중복문제 해결

컴포넌트에서는 데이터를 객체형식이 아닌 함수로 만들어야 한다

컴포넌트가 여러번사용을 전제하기 때문에 각각의 컴포넌트의 데이터가
달라야함

컴포넌트는 <script>중 항상 상단!!
스클비트는 div#root보다는 아래

공통된 컴포넌트라도 세세하게 까면 다른점이 있따
이럴때 props를 사용

즉, 컴포넌트를 쓰되 컴포넌트 내에서 달라지는 점이 있으면
props를 쓴다

스크립트를 여러개 쓰면 불편해짐
-> 하나 수정하면 다른 곳에 영향이 갈수 있고 순서도 맞춰줘야함
-> 웹팩으로 해결가능(여러게 스크립트들을 하나로 합쳐줌)
-> 실제 사이트를 만들 때 웹팩해결하는게 편함
-> 웹팩을 배우는것보단 스크립트를 관리하는 어려움이 더심하다





