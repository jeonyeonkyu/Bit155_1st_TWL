이 part는 비동기 연습

setInterval()
: 일정한 시간 간격으로 작업을 수행하기 위해서 사용
clearInterval 함수를 사용하여 중지할 수 있습니다.
 주의할 점은 일정한 시간 간격으로 실행되는 작업이 
 그 시간 간격보다 오래걸릴 경우 문제가 발생할 수 있습니다.


querySelector은 제일먼저 발견되는것만 선택한다(1개만 선택)

항상 중복되는 코드는 줄이자!!

document.querySelectorAll(".btn").forEach(function(btn) {
  btn.addEventListener("click", function() {
    console.log(this.textContent);
  });
});
querySelectorAll은 foreach를 사용하여 반복문 안에 이벤트 리스너를 달아줌
-> for쓸 필요가 없음

Elements -> Event Listener을 통해 이벤트리스너 가동유무를 체크할 수 있다

개발자도구를 잘 활용해라!!

left가 값이 일대일로 배치되어있음
JS 객체는 딕셔너리 자료구조 역할을 할 수 있으므로 이를 1:1 매칭

변수명은 항상 가독성을 우선시해라!!

Object.entries(객체)로 객체를 배열로 바꿀 수 있다.
var 가위바위보 = {
  //딕셔너리 자료구조
  바위: "0",
  가위: "-142px",
  보: "-284px"
};
Object.entries(가위바위보);
-> 2차원 배열 모양으로 바뀜

배열.find는 반복문이지만 원하는 것을 찾으면(return이 true) 멈춘다.

indexOf는 1차원 배열
find or findIndex(인덱스를 찾아줌)는 2차원 배열

코드를 짜면서 리펙토링 하는것도 중요
(하드코딩 제거는 좀 어려움)

애매하게 반복되는 것은 잘 생각해보면 규칙이 있다.
(가위바위보 승리,패배 판단 소스코드..)

setInterval과 eventListener이 비동기부분
clearInterval로 setInterval을 멈춘다.

쉬운거일수록 코드를 깔끔하게 정리해라

여러 개의 딕셔너리 자료구조가 서로 비슷한 경우
하나로 합쳐주면 더 좋다.

 [-1, 2].includes(점수표[나의선택] - 점수표[컴퓨터의선택(이미지좌표)])
배열.includes로 || 관계를 줄일 수 있다.


변수를 사용해서 중복되는 것을 제거해라
변수에 변수를 넣지마라!!

위에서부터 코드를 읽을떄 글처럼 읽을 수 있으면 좋은 코드
=> 정안되면 주석을 달아라

지나친 변수사용은 메모리낭비를 유발(코드가 많을시..)