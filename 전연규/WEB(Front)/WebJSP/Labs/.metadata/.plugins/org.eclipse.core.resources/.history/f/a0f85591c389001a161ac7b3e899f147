<%@page import="java.util.Date"%>
<%@page import="java.util.HashMap"%>
<%@page import="java.util.Map"%>
<%@page import="kr.or.bit.Emp"%>
<%@page import="java.util.ArrayList"%>
<%@page import="java.util.List"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
	<!-- 
		JAVA
		int sum = 0;
		for(int i = 0; i<= 10; i++){
			sum+=i;
		}
		for(String s : list)
	 -->
	<c:forEach var="i" begin="1" end="10">
		<c:set var="sum" value="${sum+i }" />
	 	${i } <br />
	</c:forEach>
	sum 누적값 : ${sum }

	<h3>구구단 5단 출력하기</h3>
	<ul>
		<c:forEach var="i" begin="1" end="9">
			<li>5*${i }=${5*i }</li>
		</c:forEach>
	</ul>
	<h3>EL & JSTL 사용해서 2~9단 까지 출력(forEach(중첩))</h3>
	<table border="1">
		<c:forEach var="i" begin="2" end="9">
			<c:forEach var="j" begin="0" end="9">
				<c:choose>
					<c:when test="${j == 0}">
						<tr bgcolor="yellow">	<th>${i}단</th>	</tr>
					</c:when>
					<c:otherwise>
						<tr><td>${i}*${j}=${i*j}</td></tr>
					</c:otherwise>
				</c:choose>
			</c:forEach>
		</c:forEach>
	</table>
	
	
	<h3>JSTL forEach 출력하기</h3>
	<%
		int[] arr = new int[]{10,20,30,40,50};
		for(int i : arr){
			out.print("출력값:" + i + "<br>");
		}
	%>
	<h3>EL JAVA 객체에 직접 접근 불가능 [JSTL에 변수에 데이터 담은 후에...]</h3>
	arr 객체[배열] 접근 불가 ${arr } <br />
	<c:set var="intarr" value="<%=arr %>"/>
	
	c: set  변수에 접근 : ${intarr } <br />
	<hr />
	
	<h3>JAVA 개선된 for 문(JSTL 개선... itmes)</h3>
	<!-- c:forEach문에서 items는 배열을 넣을 수 있다(여러가지 요소가있는 자원이 올 수 있다)  -->
	<c:forEach var="i" items="${intarr }">
		배열값 : ${i} <br />
	</c:forEach>
	<!--  배열에 있는 값을 다 빼오기 가능 (배열에 있는 개수만큼 for문이 돈다) -->
	
	<h3>단순하게 .. 편하게</h3>
	<c:forEach var="i" items="<%=arr %>">
		배열값: ${i } <br />	
	</c:forEach>
	<!-- 이렇게해도 똑같이 나온다 (c set을 사용해서 변수에 담아서 사용해도 되고 재사용이 필요 없다면 items에다가 배열 객체의 주소를
	다이렉트로 주어도 된다 -->
	
	<h3>재미 삼아서..</h3>
	<c:forEach var = "i" items="<%= new int[]{1,2,3,4,5} %>">
		배열값: ${i } <br />
	</c:forEach>
	<!-- 바로 forEach문에다가 배열값을 만들어서 뽑아도 됨 -->
	
	<h3>forEach 활용하기2</h3>
	<c:forEach var="i" items="${intarr }" varStatus="status"> 
			index:${status.index } &nbsp;&nbsp;&nbsp;
			count:${status.count } &nbsp;&nbsp;&nbsp;
			value:${i} <br />
	</c:forEach>
	
	<h3>TODAY POINT (모르면 게시판 못 만들어요^^)</h3>
	<%
		List<Emp> emplist = new ArrayList<>();
		
		emplist.add(new Emp(1000,"A"));
		emplist.add(new Emp(2000,"B"));	
		emplist.add(new Emp(3000,"C"));
		
		for(Emp e : emplist){
			out.print(e.getEmpno() + "/" + e.getEname() + "<br>");
		}
		%>
		
		<h3>JSTL 출력하세요</h3>
		<c:set var ="list" value="<%=emplist%>"/>
		
		<table border = "1">
			<tr><td>사번</td><td>이름</td></tr>
			<c:forEach var="e" items="${list}">
				<!-- e 변수는 EMP 객체의 주소 -->
				<tr><td>${e.empno}</td><td>${e.ename}</td></tr>
			</c:forEach>
		</table>	
	
	
	<h3>JSTL 출력하세요_2</h3>
	
		
		<table border = "1">
			<tr><td>사번</td><td>이름</td></tr>
			<c:forEach var="e" items="<%= emplist%>">
				<!-- e 변수는 EMP 객체의 주소 -->
				<tr><td>${e.empno}</td><td>${e.ename}</td></tr>
			</c:forEach>
		</table>	
		
		<h3>JSTL 사용 Map 다루기</h3>
		<%
			Map<String,Object> hm = new HashMap<>();
			hm.put("name","hong");
			hm.put("pwd","1004");
			hm.put("date",new Date());
		%>
			<h3>Java Map 객체 EL&JSTL 사용 출력하기 (key, value)</h3>
			<c:set var="hm" value="<%= hm%>"/>
			<c:forEach var="obj" items="${ }">
				
			</c:forEach>	
		
		
</body>
</html>