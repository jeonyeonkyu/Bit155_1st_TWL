 <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
: 이것만 참고해도 html에서 vue를 사용할 수 있음

공식문서 튜토리얼 정도는 따라해보는게 좋음

<body>
    <div id="root">

    </div>
</body>

<script>
    const app = new Vue({
        
    }) //app을 Vue의 인스턴스라 부름
</script>

=> html을 vue의 템플릿 or 컴포넌트로 전환 가능

리액트나 vue같은 싱글 페이지 애플리케이션은 주소가 바뀌지 않음
=> 바뀌는 부분만 바뀜, 전체를 새로고침 하지 않는다는 것

기존 js나 jquery는 데이터가 바뀌면 화면도 같이 맞춰줘야됬음
하지만 뷰나 리액트는 데이터를 바꾸면 자동으로 화면부분이 바뀜

가장핵심 = 데이터만 관리

<div v-if="liked">좋아요 눌렀음</div>
<button v-else v-on:click="onClickButton">Like</button>

>>liked가 true면 div / false면 button이 보여짐
>> ""안에는 vue로 선언한 data나 methods 등을 넣어주면 됨
>>v-if랑 v-else는 붙여져 있어야됨

데이터가 바뀌는 부분을 중심으로 생각해라

<div> {{ firs }} 곱하기 는?</div>
>> 중괄호를 두번 감싸면 데이터를 렌더링 할 수 있음

원리 : 이미 화면을 다 만들어놓고 페이지와 바뀌는 부분을 데이터로 때려박음

웹팩을 쓸수밖에 없는이유는? 
안쓰면 개복잡해짐 
다음시간에 가르침

걍 둘다 배워라

나중에는 난이도가 비슷해지지만

초반 진입장벽은 vue가 쉬움
리액트를 잘배워두면 vue는 개껌





