Nan = Not a number

NaN == NaN
false

1 == '1'
true

그래서 비교할때는
=== 나 !== 을 사용해서 비교
==나 !=은 없다고 생각!!

NaN === NaN
false : 유일한 예외(암기)


undefined
: 변수에 아무것도 안넣고 선언했을 시 자동으로 들어가는 것

변수초기화
(선언한 변수명) = undefined


undefined 쓰지말고 null써라
null을 쓰면 고의적으로 넣었다는 것을 알 수 있음

` : 백틱

JS에선 작은따옴표 써라(키 누를때 편함 / 이걸 많이 씀)


for(var star = 1; star <=5; star += 1) {
    console.log('*'.repeat(star))
}


for(var star = 5; star >=1; star -= 1) {
    console.log(' '.repeat(5-star) + '*'.repeat(star))
}


for(var star = 9; star >=1; star -= 2) {
    console.log(' '.repeat((9-star) / 2) + '*'.repeat(star))
}

어려움..(마름모 별찍기)
답 1
for(var star = -4 ; star < 5 ;star +=2 ){
 console.log(' '.repeat(Math.abs((1-(star+1)))/2) + '*'.repeat(5-Math.abs(star)));
}
답 2
for(var i=0; i<=4; i++){
  console.log(' '.repeat(Math.abs(i-2)) + '*'.repeat(5-Math.abs(2*(i-2))))
}


함수랑 객체 제일 중요


객체안에 함수와 배열이 들어 있음



var 제로초 = {
    이름: '제로초',
    키:174,
    몸무게:68, <-- 마지막것도 쉼표를 찍는게 좋음!!(실무하다보면 알꺼다)
}


객체 = {
    속성(프로퍼티): 값,
    속성(메서드): 함수,
}
함수가 들어가 있는 프로퍼티 = 메서드


var 제로초 = {
    이름 : '제로초',
    먹다 : function 먹다() {
        console.log('냠냠')
    },
}


'안녕하세요'[3]
결과 : "세"

속성은 대괄호나 .으로 접근
제로초.이름 or 제로초['이름']
.쓰는게 더 편하지만 대괄호를 꼭 써야될때가 있음
대괄호안에는 변수를 쓸 수 있지만 점뒤에는 안됨
ex) 
var 값 = '이름'
네로.값 -> undefined
네로[값] -> 이름



문자는 객체가 아니다
하지만
'안녕하세요'와 같은 문자에 .을 붙이는 순간 브라우저는 문자라고 생각안하고 객체라고 생각

'안녕하세요'.length (문자 객체)
결과 : 5


var 문자객체 = {
    repeat : function(num) {} 
    함수에 이름이 없어도됨 : 익명 함수
    왜냐면 프로퍼티가 이름역할을 하기 때문이다.
}


객체에 없는 속성을 검색하면 undefined가 뜬다


배열 : 각 그룹화는 하고 싶지만 속성 이름을 따로 주고 싶지는 않을 때 사용
var 배열 = [
    '사과',
    '오렌지',
    '포도',
    '딸기',
]


Array : 배열을 담당하는 객체

배열과 객체는 [인덱스]를써서 값을 조회할 수 있으므로 구별하기 힘듬

Array.isArray(배열명 or 객체명)) 로 구별하자

window객체가 제일 중요



while (true) {
  var 숫자1 = Math.floor(Math.random() * 9) + 1;
  var 숫자2 = Math.floor(Math.random() * 9) + 1;
  var 결과 = 숫자1 * 숫자2;
  var 조건 = true;
  while (조건) {
    var 답 = prompt(String(숫자1) + "곱하기" + String(숫자2) + "는?");
    // -> prompt에서 답에 취소를 누르면 답에 null이 들어감 / Number(null)은 0이므로 땡이나옴 / 답맞을떄까지 무한 반복
    if (결과 === Number(답)) {
      alert("딩동댕");
    } else {
      alert("땡");
    }
  }
}

무한 반복문을 끄고 싶으면 shift + esc


window는 브라우저 / document는 페이지(탭)
window 객체중 중요한 것
1. document 
: 


window는 전역객체
전역 변수는 전역 객체의 속성이 됨
ex)
var a = 'b';
window a;
-> 결과 b가 나옴 / 윈도우에 등록이 되기 때문에
그러나 함수안에 변수를 선언했을 경우는 window에 등록이 안됨

전역 변수와 함수 안의 변수가 다른 이유는 함수의 특수성(함수 스코프) 때문


document -> HTML과 JS의 통역사

console.dir() : 객체형식으로 볼 수 있음



document object model(DOM)
-> HTML을 JS로 통역


document 객체의 메서드를 사용해 HTML을 만들 수 있음


자바스크립트 핵심 중 하나 = 비동기와 이벤트 리스너

JS로 굳이 HTML을 만들 필요가 없음(비효율적)



addEventListener에 넣는 함수가 콜백함수


input창에 들어가는 값은 value



form에 input과 button 추가
- form을 이용하면 엔터로 버튼 클릭 가능
- form의 기본 동작은 새로고침 or 다른 페이지로 이동
- 새로고침현상 막기 위해 이벤트.preventDefault() 적용


input type을 number로해도 숫자로 안되고 문자로 된다.